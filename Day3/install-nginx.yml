- name: Install, configure and deploy web page in nginx web server
  hosts: all
  become: yes
  vars:
      config_changed: False
  vars_files:
    - nginx_vars_file
  tasks:
    - name: Install nginx web server in Ubuntu
      when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
      apt: name=nginx state=latest update_cache=yes
      notify:
        - Restart nginx web server

    - name: Configure nginx web server in Ubuntu
      when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
      copy: src=default dest=/etc/nginx/sites-available/default
      notify:
        - Restart nginx web server
      register: response

    - name: Install extra package for enterprise linux (EPEL) in CentOS
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      yum: name=epel-release state=latest

    - name: Install nginx web server in CentOS
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      yum: name=nginx state=latest 
      notify:
        - Restart nginx web server

    - name: Configure nginx web server in CentOS 
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      copy: src=default.conf dest=/etc/nginx/conf.d/default.conf
      register: response
      notify:
        - Restart nginx web server

    - name: Create Document root folder
      file: path=/var/html state=directory mode=0777

    - name: Deploy web page in nginx web server
      template: src=index.html.j2 dest=/var/html/index.html

    - name: Define custom fact
      set_fact:
          config_changed: "{{True if response.changed == True else False}}"

    - debug: var=config_changed

    - debug: msg="Configuration changes detected" 
      when: config_changed == True

    - debug: msg="No configuration changes detected" 
      when: config_changed == False 

  handlers:
    - name: Restart nginx web server
      command: service nginx restart


- name: Test if nginx server is up and running
  hosts: localhost
  tasks:
    - name: Make sure curl is installed
      apt: name=curl state=present update_cache=yes

    - name: Access the web page
      shell: "curl http://localhost:{{item}}"
      with_sequence: start=8001 end=8008

